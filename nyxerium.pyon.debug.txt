
19:57:35:570 | 
19:57:35:570 | [Deep Serialize] Object: test(testParam=['testDataaa', test(testParam='nem')]) 
19:57:35:571 | 
19:57:35:571 | [Start - 1] ==================== 
19:57:35:571 |   [1] Original obj input:
19:57:35:571 |  	test(testParam=['testDataaa', test(testParam='nem')]) 
19:57:35:572 |   [TypeCheck] Value: test(testParam=['testDataaa', test(testParam='nem')]), Type(s): (<class 'dict'>, <class 'list'>, <class 'tuple'>) 
19:57:35:573 |   [1] Value for Iterability test:
19:57:35:573 |  	value: test(testParam=['testDataaa', test(testParam='nem')]) @type: <class '__main__.test'> | is the value an object (__is_object): True | is the value a dict/list/tuple (test1): False
19:57:35:573 | 	Final Resoult: True 
19:57:35:573 |   [1] Original Obj Iterability (Good if False):
19:57:35:573 |  	Object (obj): test(testParam=['testDataaa', test(testParam='nem')]) | is object iterable: True 
19:57:35:574 |   [TypeCheck] Value: test(testParam=['testDataaa', test(testParam='nem')]), Type(s): (<class 'dict'>, <class 'list'>, <class 'tuple'>) 
19:57:35:575 |   [1] Value for Iterability test:
19:57:35:575 |  	value: test(testParam=['testDataaa', test(testParam='nem')]) @type: <class '__main__.test'> | is the value an object (__is_object): True | is the value a dict/list/tuple (test1): False
19:57:35:575 | 	Final Resoult: True 
19:57:35:576 |   [TypeCheck] Value: test(testParam=['testDataaa', test(testParam='nem')]), Type(s): <class 'dict'> 
19:57:35:577 |   [TypeCheck] Value: test(testParam=['testDataaa', test(testParam='nem')]), Type(s): <class 'dict'> 
19:57:35:578 |   [TypeCheck] Value: test(testParam=['testDataaa', test(testParam='nem')]), Type(s): (<class 'list'>, <class 'tuple'>) 
19:57:35:579 |   [TypeCheck] Value: ['testDataaa', test(testParam='nem')], Type(s): (<class 'list'>, <class 'tuple'>) 
19:57:35:579 |   [TypeCheck] Value: testDataaa, Type(s): <class 'dict'> 
19:57:35:581 | 
19:57:35:581 | [Deep Serialize] Object: test(testParam='nem') 
19:57:35:582 | 
19:57:35:582 | [Start - 2] ==================== 
19:57:35:584 |   [2] Original obj input:
19:57:35:584 |  	test(testParam='nem') 
19:57:35:585 |   [TypeCheck] Value: test(testParam='nem'), Type(s): (<class 'dict'>, <class 'list'>, <class 'tuple'>) 
19:57:35:587 |   [2] Value for Iterability test:
19:57:35:587 |  	value: test(testParam='nem') @type: <class '__main__.test'> | is the value an object (__is_object): True | is the value a dict/list/tuple (test1): False
19:57:35:587 | 	Final Resoult: True 
19:57:35:588 |   [2] Original Obj Iterability (Good if False):
19:57:35:588 |  	Object (obj): test(testParam='nem') | is object iterable: True 
19:57:35:588 |   [TypeCheck] Value: test(testParam='nem'), Type(s): (<class 'dict'>, <class 'list'>, <class 'tuple'>) 
19:57:35:590 |   [2] Value for Iterability test:
19:57:35:590 |  	value: test(testParam='nem') @type: <class '__main__.test'> | is the value an object (__is_object): True | is the value a dict/list/tuple (test1): False
19:57:35:590 | 	Final Resoult: True 
19:57:35:590 |   [TypeCheck] Value: test(testParam='nem'), Type(s): <class 'dict'> 
19:57:35:591 |   [TypeCheck] Value: test(testParam='nem'), Type(s): <class 'dict'> 
19:57:35:593 |   [TypeCheck] Value: test(testParam='nem'), Type(s): (<class 'list'>, <class 'tuple'>) 
19:57:35:593 |   [TypeCheck] Value: nem, Type(s): (<class 'list'>, <class 'tuple'>) 
19:57:35:594 |   [TypeCheck] Value: nem, Type(s): <class 'dict'> 
19:57:35:595 |   [TypeCheck] Value: test, Type(s): (<class 'list'>, <class 'tuple'>) 
19:57:35:596 |   [TypeCheck] Value: test, Type(s): <class 'dict'> 
19:57:35:597 |   [2] New dict created:
19:57:35:597 |  	{'testParam': 'nem', 'PYON_TYPE': 'test'} 
19:57:35:598 | [End - 2] ==================== 
19:57:35:598 |  
19:57:35:598 |   [TypeCheck] Value: ['testDataaa', {'testParam': 'nem', 'PYON_TYPE': 'test'}], Type(s): <class 'dict'> 
19:57:35:599 |   [TypeCheck] Value: test, Type(s): (<class 'list'>, <class 'tuple'>) 
19:57:35:601 |   [TypeCheck] Value: test, Type(s): <class 'dict'> 
19:57:35:602 |   [1] New dict created:
19:57:35:602 |  	{'testParam': ['testDataaa', {'testParam': 'nem', 'PYON_TYPE': 'test'}], 'PYON_TYPE': 'test'} 
19:57:35:604 | [End - 1] ==================== 
19:57:35:604 |  
19:57:35:605 | 
19:57:35:605 | [Deep Parse] Dict/List: {'testParam': ['testDataaa', {'testParam': 'nem', 'PYON_TYPE': 'test'}], 'PYON_TYPE': 'test'} 
19:57:35:606 | 
19:57:35:606 | [Start - 3] ==================== 
19:57:35:607 |   [TypeCheck] Value: {'testParam': ['testDataaa', {'testParam': 'nem', 'PYON_TYPE': 'test'}], 'PYON_TYPE': 'test'}, Type(s): <class 'list'> 
19:57:35:608 | 
19:57:35:608 | [Deep Parse] Dict/List: {'testParam': 'nem', 'PYON_TYPE': 'test'} 
19:57:35:609 | 
19:57:35:609 | [Start - 4] ==================== 
19:57:35:609 |   [TypeCheck] Value: {'testParam': 'nem', 'PYON_TYPE': 'test'}, Type(s): <class 'list'> 
19:57:35:611 |   [4] Return Value: test(testParam='nem', pyon_converted=True) 
19:57:35:612 | [End - 4] ==================== 
19:57:35:612 |  
19:57:35:614 |   [3] Return Value: test(testParam=['testDataaa', test(testParam='nem', pyon_converted=True)], pyon_converted=True) 
19:57:35:614 | [End - 3] ==================== 
19:57:35:614 |  